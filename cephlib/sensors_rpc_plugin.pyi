from typing import TypeVar, Callable, Any, Optional, List, Dict, Tuple

Pid = TypeVar('Pid', str)
AnyFunc = TypeVar('AnyFunc', Callable[..., Any])
PrefixList = Optional[List[str]]
SensorDict = Dict[str, int]

def provides(name: str) -> Callable[[AnyFunc], AnyFunc]: ...
def get_pid_name(pid: Pid) -> str: ...
def pid_stat(pid: Pid) -> float: ...
def get_mem_stats(pid : Pid) -> Tuple[int, int]: ...
def get_ram_size() -> int: ...
def unpack_rpc_updates(res_tuple: Tuple[Dict[bytes, Tuple[int, int, bytes]], bytes, bytes]) -> Tuple[str, Any, bool]: ...
